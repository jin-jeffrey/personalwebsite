{"version":3,"sources":["components/Introduction/media/linkedin.png","components/Introduction/media/github.png","components/Introduction/media/code.png","components/Introduction/media/resume.png","components/Introduction/media/resume.pdf","components/Projects/media/INVM.png","components/Projects/media/google.png","components/Projects/media/bg-gen.png","components/Introduction/Introduction.js","components/Card/Card.js","components/Projects/Projects.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","className","href","target","rel","src","linkedIn","alt","github","code","resumepdf","download","resume","React","Component","Card","props","link","imgsrc","name","description","tech","Projects","INVM","google","BG","Footer","App","document","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,mWCyB5BC,E,uKAdP,OACI,+BAAWC,UAAY,SACnB,yBAAKA,UAAY,QAAjB,eACA,yBAAKA,UAAY,SACb,uBAAGA,UAAU,YAAYC,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAAsB,yBAAKH,UAAU,OAAOI,IAAKC,IAAUC,IAAI,mBAC/J,uBAAGN,UAAU,YAAYC,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBAAsB,yBAAKH,UAAU,OAAOI,IAAKG,IAAQD,IAAI,iBAChJ,uBAAGN,UAAU,YAAYC,KAAK,iDAAiDC,OAAO,SAASC,IAAI,uBAAsB,yBAAKH,UAAU,OAAOI,IAAKI,IAAMF,IAAI,eAC9J,uBAAGN,UAAU,YAAYC,KAAMQ,IAAWC,SAAS,sBAAqB,yBAAKV,UAAU,OAAOI,IAAKO,IAAQL,IAAI,uB,GATxGM,IAAMC,WCYlBC,G,MAlBF,SAACC,GACV,OAEI,yBAAKf,UAAY,mCACb,yBAAKA,UAAY,mBACb,uBAAGC,KAAMc,EAAMC,KAAMd,OAAO,SAASC,IAAI,uBAAsB,yBAAKH,UAAU,uBAAuBI,IAAKW,EAAME,OAAQX,IAAKS,EAAMT,QAEvI,yBAAKN,UAAU,2BACX,wBAAIA,UAAU,cAAce,EAAMG,MAClC,uBAAGlB,UAAU,4BAA4Be,EAAMI,cAEnD,yBAAKnB,UAAU,mBACX,2BAAOA,UAAU,cAAce,EAAMK,U,mDCiBtCC,G,6KAtBP,OACI,+BAAWrB,UAAU,iBACjB,yBAAKA,UAAU,qBAAf,YACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aAAY,kBAAC,EAAD,CAAMiB,OAAQK,IAAMhB,IAAI,OAAOY,KAAK,0BAC/DF,KAAK,uBACLI,KAAK,uCACLD,YAAY,gJACZ,yBAAKnB,UAAU,aAAY,kBAAC,EAAD,CAAMiB,OAAQM,IAAQjB,IAAI,SAASY,KAAK,4BACnEF,KAAK,gDACLI,KAAK,mBACLD,YAAY,yIACZ,yBAAKnB,UAAU,aAAY,kBAAC,EAAD,CAAMiB,OAAQO,IAAIlB,IAAI,eAAeY,KAAK,uBACrEF,KAAK,sDACLI,KAAK,wBACLD,YAAY,qH,GAjBTP,IAAMC,YCUdY,G,6KAZP,OACI,+BAAWzB,UAAU,eACjB,yBAAKA,UAAU,OAAf,eACgB,uBAAGA,UAAU,YAAYC,KAAK,yCAAyCC,OAAO,SAASC,IAAI,uBAAsB,2CAC7H,6BACA,2D,GAPCS,IAAMC,YCoBZa,E,kLAdXC,SAASC,MAAQ,gB,+BAIjB,OACE,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAVUhB,IAAMC,WCIJgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFT,SAASU,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.42a4d804.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin.2b58af2f.png\";","module.exports = __webpack_public_path__ + \"static/media/github.4e66e46d.png\";","module.exports = __webpack_public_path__ + \"static/media/code.920850c5.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.99133fe4.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.8203bf81.pdf\";","module.exports = __webpack_public_path__ + \"static/media/INVM.62e0444e.png\";","module.exports = __webpack_public_path__ + \"static/media/google.99eb7202.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-gen.96bcb066.png\";","import React from 'react';\r\nimport './Introduction.css';\r\nimport linkedIn from './media/linkedin.png'\r\nimport github from './media/github.png'\r\nimport code from './media/code.png'\r\nimport resume from './media/resume.png'\r\nimport resumepdf from './media/resume.pdf'\r\n\r\n\r\nclass Introduction extends React.Component {\r\n    render(){\r\n        return(\r\n            <container className = \"intro\">\r\n                <div className = \"name\">Jeffrey Jin</div>\r\n                <div className = \"logos\">\r\n                    <a className=\"logo mx-3\" href=\"https://www.linkedin.com/in/mr-jeffrey-jin/\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon\" src={linkedIn} alt=\"LinkedIn icon\"/></a>\r\n                    <a className=\"logo mx-3\" href=\"https://github.com/jin-jeffrey\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon\" src={github} alt=\"Github icon\"/></a>\r\n                    <a className=\"logo mx-3\" href=\"https://github.com/jin-jeffrey/personalwebsite\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon\" src={code} alt=\"Code icon\"/></a>\r\n                    <a className=\"logo mx-3\" href={resumepdf} download=\"jeffrey_jin_resume\"><img className=\"icon\" src={resume} alt=\"Resume icon\"/></a>\r\n                </div>\r\n            </container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Introduction;","import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        // vertical cards\r\n        <div className = \"card text-center mx-5 img-hover\">\r\n            <div className = \"overflow-hidden\">\r\n                <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"card-img-top cardimg\" src={props.imgsrc} alt={props.alt}/></a>\r\n            </div>\r\n            <div className=\"card-body overflow-auto\">\r\n                <h4 className=\"card-title\">{props.name}</h4>\r\n                <p className=\"card-text text-secondary\">{props.description}</p>\r\n            </div>\r\n            <div className=\"card-footer p-2\">\r\n                <small className=\"text-muted\">{props.tech}</small>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card.js'\r\nimport INVM from './media/INVM.png';\r\nimport google from './media/google.png';\r\nimport BG from './media/bg-gen.png';\r\nimport './Projects.css';\r\n\r\n\r\nclass Projects extends React.Component {\r\n    render(){\r\n        return(\r\n            <container className=\"projects my-5\">\r\n                <div className=\"projectTitle mb-5\">PROJECTS</div>\r\n                <div className=\"proj-group\">\r\n                    <div className=\"proj-item\"><Card imgsrc={INVM} alt=\"INVM\" name=\"INVM: Inventory Manager\"\r\n                    link=\"https://www.invm.dev\"\r\n                    tech=\"HTML, CSS, Python, Django, Bootstrap\"\r\n                    description=\"A webapp designed to help resellers track inventory, sales, and profits. Users can add items, specify item details, and log transactions. \"/></div>\r\n                    <div className=\"proj-item\"><Card imgsrc={google} alt=\"Google\" name=\"Google Automated Activity\"\r\n                    link=\"https://github.com/jin-jeffrey/gmail-activity\"\r\n                    tech=\"Python, Selenium\"\r\n                    description=\"A python project used to create activity on a gmail account. Includes signing in, searching Google, and watching videos on Youtube.\"/></div>\r\n                    <div className=\"proj-item\"><Card imgsrc={BG} alt=\"BG Generator\" name=\"Background Generator\"\r\n                    link=\"https://jin-jeffrey.github.io/background-generator/\"\r\n                    tech=\"Javascript, HTML, CSS\"\r\n                    description=\"A background generator that allows users to select two colors, display the gradient, and provide the CSS.\"/></div>\r\n                </div>\r\n            </container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nclass Footer extends React.Component {\r\n    render(){\r\n        return(\r\n            <container className=\"footer mt-5\">\r\n                <div className=\"p-5\">\r\n                    Designed by <a className=\"text-dark\" href=\"https://linkedin.com/in/mr-jeffrey-jin\" target=\"_blank\" rel=\"noopener noreferrer\"><u>Jeffrey Jin</u></a>\r\n                    <br />\r\n                    <small>Open to Public Use</small>\r\n                </div>\r\n            </container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Introduction from './components/Introduction/Introduction';\r\nimport Projects from './components/Projects/Projects';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nclass App extends React.Component{\r\n  componentDidMount(){\r\n    document.title = \"Jeffrey Jin\"\r\n  }\r\n\r\n  render() {\r\n    return( \r\n      <main>\r\n        <Introduction />\r\n        <Projects />\r\n        <Footer />\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}